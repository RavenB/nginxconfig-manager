## Global配置
* * *
### global/set
* * *
* **功能**  
  
  修改 Global 配置文件中的值

* **请求方式**  
  
  URL: /global/set   
  Method: POST  
  Content-Type: application/x-www-form-urlencoded 

  
* **请求参数**

  \[key1\]=\[value1\]&\[key2\]=\[value2\]

  Global 的 key 取值如下：
  
| Request参数    | 默认值             | 是否必须                        |
|:------------: |:----------------:| :-------------------------:|
| user                  | nginx | 否 |
| workerProcesses       | 1 | 否 |
| errorLog              | /var/log/nginx/error.log | 否 |
| pid                   | /var/run/nginx.pid | 否 |
| useEpoll              | true | 否 |
| workerConnections     | 65535 | 否 |
| workerRlimitNofile    | 65535 | 否 |
| ulimit                | 1 | 否 |
| sendfile              | true | 否 |
| resetTimedoutConnection   | true | 否 |
| tcpNopush             | true | 否 |
| defaultType           | application/octet-stream | 否 |
| sslSessionCache       | shared:SSL:10m | 否 |
| sslSessionTimeout     | 10m | 否 |
| openFileCcache        | max&#166;65535 inactive&#166;20s | 否 |
| openFileCacheMinUses  | 1 | 否 |
| openFileCacheValid    | 30s | 否 |
| tcpNodelay            | true | 否 |
| index                 | index.html index.htm | 否 |
| keepaliveTimeout      | 20 | 否 |
| keepaliveRequests     | 10240 | 否 |
| clientHeaderBufferSize| 32k | 否 |
| largeClientHeaderBuffers  | 4 32k | 否 |
| serverNamesHashBucketSize | 128 | 否 |
| clientMaxBodySize     | 20M | 否 |
|  logFormat             | nginx_access  '$request_time-_-$remote_addr-_-$host-_-$upstream_addr-_-$upstream_status-_-$time_local-_-$request-_-$status-_-$body_bytes_sent-_-$http_referer-_-$http_user_agent-_-$http_x_forwarded_for-_-$upstream_response_time' | 否 |
| customHttp | 空 | 否 |
| customMimetypes | 空 | 否 |
| customProxy | 空 | 否 |
| customServer | 空 | 否 |

* **返回数据(只解释 result 字段，其他字段含义见前面)**

 result字段永远为空

* **请求例子(只列举部分)**

 ```
 成功例子:  
 请求：curl -H "Content-Type: application/x-www-form-urlencoded" -d 'user=ops&workerProcesses=2' http://localhost:8080/global/set
 返回：
  {"errorCode":0,"msg":"success","result":""}
 ```

 ```
 错误的例子:  
 请求：curl -H "Content-Type: application/x-www-form-urlencoded" -d 'somekey=ops' http://localhost:8080/global/set
 返回：
  {"errorCode":1,"msg":"unknown property found: somekey","result":""}
 ```

* * *
### global/get
* * *
* **功能**  
  
  获取 Global 配置文件中的值

* **请求方式**  
  
  URL: /global/get   
  Method: GET  
  
* **请求参数**

  key=\[someProperty2\]&key=\[someProperty2\]

* **返回数据(只解释 result 字段，其他字段含义见前面)**
  
  result 字段为所指定配置项的 map，map 字段如下：
  
| Key          | 内容             |
|:-----------: |:--------------------:|
| keyValues       | 含所有指定 key 的所有 key-value 值的 map|
| gmtModified      | global 的最近更新时间              |
| version      | global 的版本              |

* **请求例子(只列举部分)**

 ```
 成功例子:  
 请求：curl http://localhost:8080/global/get?key=user&key=workerProcesses
 返回：
  {"errorCode":0,"msg":"success","result":{"gmtModified":"2014-12-23 17:49:59","keyValues":{"user":"ops"},"version":5}}
 ```

 ```
 错误的例子:  
 请求：curl http://localhost:8080/global/get?key=someKey
 返回：
  {"errorCode":1,"msg":"unknown property found: somekey","result":""}
 ```

* * *
### global/list
* * *
* **功能**  
  
  获取所有配置项

* **请求方式**  
  
  URL: /global/list   
  Method: GET  
  
* **请求参数**

  无参数

* **返回数据(只解释 result 字段，其他字段含义见前面)**

  result 字段为所有配置项的 map

* **请求例子(只列举部分)**

 ```
 成功例子:  
 请求：curl http://localhost:8080/global/list
 返回：
  {"errorCode":0,"msg":"success","result":{"clientHeaderBufferSize":"32k","clientMaxBodySize":"20M","customHttp":"","customMimetypes":"","customProxy":"","customServer":"","defaultType":"application/octet-stream","errorLog":"/var/log/nginx/error.log","gmtCreate":"2014-12-15 16:59:09","gmtModified":"2014-12-23 17:49:59","index":"index.html index.htm","keepaliveRequests":10240,"keepaliveTimeout":20,"largeClientHeaderBuffers":"4 32k","logFormat":"nginx_access  '$request_time-_-$remote_addr-_-$host-_-$upstream_addr-_-$upstream_status-_-$time_local-_-$request-_-$status-_-$body_bytes_sent-_-$http_referer-_-$http_user_agent-_-$http_x_forwarded_for-_-$upstream_response_time'","openFileCacheMinUses":1,"openFileCacheValid":"30s","openFileCcache":"max=65535 inactive=20s","pid":"b","resetTimedoutConnection":true,"sendfile":true,"serverNamesHashBucketSize":128,"sslSessionCache":"shared:SSL:10m","sslSessionTimeout":"10m","tcpNodelay":true,"tcpNopush":false,"ulimit":1,"useEpoll":true,"user":"ops","version":5,"workerConnections":65535,"workerProcesses":2,"workerRlimitNofile":65535}}
 ```
 
* * *
### global/info
* * *
* **功能**  
  
   获取 6 个 global 配置文件的信息

* **请求方式**  
  
  URL: /global/info   
  Method: GET  
  
* **请求参数**

  无参数

* **返回数据(只解释 result 字段，其他字段含义见前面)**

  result 含 6 个所有配置文件信息的数组，每个数组是一个文件信息，以 map 表示， map 的字段如下：
  
| Key          | 内容             |
|:-----------: |:--------------------:|
| module       | 文件名 |
| url      | 下载地址              |
| md5      | 文件的 md5              |
| gmtModified      | 最近更新时间              |
| version      | 版本              |

* **请求例子(只列举部分)**

 ```
 成功例子:  
 请求：curl http://localhost:8080/global/info
 返回：
  {"errorCode":0,"msg":"success","result":[{"gmtModified":"2014-12-23 17:50:00","md5":"5b8441e64413bd18ca279a434ae8e96b","module":"global_http","url":"/global/download?id=54","version":54},{"gmtModified":"2014-12-23 17:50:00","md5":"7a379948b09a99bd8475a193366485a7","module":"global_base","url":"/global/download?id=55","version":55},{"gmtModified":"2014-12-23 17:50:00","md5":"d41d8cd98f00b204e9800998ecf8427e","module":"global_http_custom","url":"/global/download?id=56","version":56},{"gmtModified":"2014-12-23 17:50:00","md5":"d41d8cd98f00b204e9800998ecf8427e","module":"global_server_custom","url":"/global/download?id=57","version":57},{"gmtModified":"2014-12-23 17:50:00","md5":"d41d8cd98f00b204e9800998ecf8427e","module":"global_mimetypes","url":"/global/download?id=58","version":58},{"gmtModified":"2014-12-23 17:50:00","md5":"d41d8cd98f00b204e9800998ecf8427e","module":"global_proxy","url":"/global/download?id=59","version":59}]}
 ```
 
* * *
### global/download
* * *
* **功能**  
  
   下载配置文件

* **请求方式**  
  
  URL: /global/download   
  Method: GET  
  
* **请求参数**

  id,唯一id。（下载链接可通过 info 接口的返回值获取到，故一般无须关心该参数如何形成）

* **返回数据(只解释 result 字段，其他字段含义见前面)**

  返回的是 text/plain 的用于下载的文件格式

* **请求例子(只列举部分)**

 ```
 成功例子:  
 请求：curl http://localhost:8080/global/download?id=5
 返回：
   下载的文件内容如下：
   user ops;
   worker_processes  2;
   error_log  /var/log/nginx/error.log;
   pid        b;
   worker_rlimit_nofile 65535;
   events {
        worker_connections 65535;
        ulimit 1;
   }
 ```
 