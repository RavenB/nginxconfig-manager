package com.yeahmobi.loadbalance_manager.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.code.morphia.query.Query;
import com.google.code.morphia.query.QueryResults;
import com.google.code.morphia.query.UpdateOperations;
import com.yeahmobi.loadbalance_manager.dao.UpstreamDao;
import com.yeahmobi.loadbalance_manager.model.Upstream;
import com.yeahmobi.loadbalance_manager.service.UpstreamService;

@Service
public class UpstreamServiceImpl implements UpstreamService {

    @Autowired
    private UpstreamDao dao;

    public void add(Upstream entity) {
        this.dao.save(entity);
    }

    public Upstream get(String name) {
        // Query<Upstream> q = this.dao.getDatastore().createQuery(Upstream.class);
        // q.field("name").equal(name);
        //
        // QueryResults<Upstream> result = this.dao.find(q);
        // List<Upstream> list = result.asList();
        //
        // if ((list != null) && (list.size() > 0)) {
        // return list.get(0);
        // }
        //
        // return null;
        return this.dao.get(name);
    }

    public void del(String name) {
        // Query<Upstream> q = this.dao.getDatastore().createQuery(Upstream.class);
        // q.field("name").equal(name);
        //
        // this.dao.deleteByQuery(q);
        this.dao.deleteById(name);
    }

    public List<Upstream> listAll() {
        Query<Upstream> q = this.dao.getDatastore().createQuery(Upstream.class);

        QueryResults<Upstream> result = this.dao.find(q);
        List<Upstream> list = result.asList();

        return list;

    }

    public void update(Upstream upstream) {
        Query<Upstream> q = this.dao.getDatastore().createQuery(Upstream.class);
        q.field("name").equal(upstream.getName());

        UpdateOperations<Upstream> ops = this.dao.createUpdateOperations();
        if (upstream.getKeepalive() != null) {
            ops.set("keepalive", upstream.getKeepalive());
        }
        if (upstream.getRegions() != null) {
            ops.set("regions", upstream.getRegions());
        }

        this.dao.update(q, ops);
    }

}
